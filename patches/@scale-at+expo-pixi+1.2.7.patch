diff --git a/node_modules/@scale-at/expo-pixi/lib/components/Signature.js b/node_modules/@scale-at/expo-pixi/lib/components/Signature.js
index eec55d9..317ece0 100644
--- a/node_modules/@scale-at/expo-pixi/lib/components/Signature.js
+++ b/node_modules/@scale-at/expo-pixi/lib/components/Signature.js
@@ -41,7 +41,7 @@ export default class Signature extends React.Component<Props> {
     this._setupPanResponder();
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     global.__ExpoSignatureId++;
   }
 
@@ -113,6 +113,10 @@ export default class Signature extends React.Component<Props> {
     }
   };
 
+  getLinesCount = () => {
+    return this.stage.children.length
+  }
+
   clear = () => {
     this.provider.reset();
     if (!this.renderer) {
diff --git a/node_modules/@scale-at/expo-pixi/lib/index.d.ts b/node_modules/@scale-at/expo-pixi/lib/index.d.ts
index 6583849..be30546 100644
--- a/node_modules/@scale-at/expo-pixi/lib/index.d.ts
+++ b/node_modules/@scale-at/expo-pixi/lib/index.d.ts
@@ -1,14 +1,20 @@
 import * as React from 'react';
+import {SnapshotOptions} from "expo-gl/src/GLView.types";
+
+export type RefSetter = (ref: Signature) => void
 
 type Props = {
   strokeColor?: number | string;
   strokeAlpha?: number;
-  onChange: () => void;
+  onChange?: (renderer: unknown) => void;
   onReady?: () => WebGLRenderingContext;
   style?: object;
+  ref: RefSetter
 };
 
 export class Signature extends React.Component<Props> {
   clear: () => void;
-  takeSnapshotAsync: () => Promise<{ uri: string }>;
+  undo: () => void;
+  getLinesCount: () => number;
+  takeSnapshotAsync: (options: SnapshotOptions) => Promise<{ uri: string }>;
 }
